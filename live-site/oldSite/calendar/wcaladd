#!/usr/bin/perl
#
# $Header: /home/cvs/webCal/webCal2/wcaladd,v 1.5 2003/06/27 20:09:04 mzou Exp $
#

#------------------------------------------------------------------------------
# Usage:
#      wcaladd -u username -p password -e email_address -spool spool_directory
# 
#------------------------------------------------------------------------------
#
# This script create a webcalendar for the specified username.
# You have to edit this file set the first three variables
# before using it.
#
# You need to be the superuser to run this script.
#
# Additional option parameters:
#
#   -type [private|public]
#        set calendar type
#   -homepage [URL]
#        set URL for the optional homepage          
#   -name NAME
#        set the real name of the calendar owner. The string
#        must be quoted if containing more than one word.
#   -title TITLE
#        set calendar title
# 
#   -overlap [0|1|2]
#        set overlap checking to Y, N or Never.
#
#   -calendar [common_calendar]
#        initialize calendar with data from common_calendar.
#
#   -yp  
#        get name and password from our local NIS server.
#
#-----------------------------------------------------------------
my $httpdowner="nobody";
my $httpdgroup="nogroup";
my $spooldir="";
#-----------------------------------------------------------------
if(defined $ENV{'SERVER_NAME'} or defined $ENV{'SCRIPT_NAME'} or
   defined $ENV{'QUERY_STRING'} or defined $ENV{'REQUEST_METHOD'}) {
    print "Content-Type: text/html\n\n";
    print "This script is not a CGI script. Bye!";
    exit 0;
}
#-----------------------------------------------------------------

use Fcntl ':flock';
use Fcntl ':DEFAULT';
use Getopt::Long;


if( $< != 0) { die("Only root can run this program");}

my $username = '';
my $password = '';
my $type = 'private';
my $name= '';
my $email = '';
my $homepage='';
my $yp = '';
my $pline="";
my $overlap = '';
my $common_cal='';
my $title='';

GetOptions('username=s' => \$username, 'password=s' => \$password, 'type=s' => \$type,
           'name=s'=>\$name, 'email=s' => \$email, 'homepage=s' => \$homepage, 'yp' =>\$yp,
          'overlap=s'=>\$overlap, 'calendar=s'=>\$common_cal, 'cal=s'=>\$common_cal,
	   'spool=s'=>\$spooldir, 'spooldir=s'=>\$spooldir, 'title=s'=>\$title );

#--------------------------------------------------------------------------------------------
if( ! $spooldir or ! -d "$spooldir" ) { die "Spool directory \'$spooldir\' does not exist!";}
#--------------------------------------------------------------------------------------------

if( !$username ) {
    print "Enter username: ";
    chop($username = <>);
}

if(!validname($username)) {
    print "\nInvalid calendar name \'$username\'. Calendar name must be alpha numerical.\n";
    exit(1);
}

if($yp) {
    my $tmp=`ypmatch $username passwd`;
    my @info = split(/:/, $tmp); my $info = $info[4];
    my @tname = split(/,/, $info); my $tname = $tname[0];
    if($tname) { $name = $tname;}
    my $tmp=`ypmatch $username passwd.adjunct.byname`;
    $tmp=~ s/::::://g;
    if($tmp !~ /\n$/) {$pline = "$tmp\n";}
    else { $pline=$tmp;}
    if(not $email) {
	$email= $username . '@math.utexas.edu';
    }
} elsif( !$password) {
    my $cpassword = "";
    print "Enter password: ";
    `stty -echo`;
    chop($password = <>);    
    `stty echo`;
    print "\nEnter password again: ";    
    `stty -echo`;
    chop($cpassword = <>);    
    `stty echo`;
    print "\n";
    if($password ne $cpassword) {
        print "Password mismatch. Goodbye\n";
    }
}

if( ! $email) {
    print "Enter the email address of calendar owner: ";
    chop($email=<>);
}

if($name eq '') { $name = $username;}

$pswdf = "$spooldir/passwd";
if( ! -f "$pswdf") {
    print "\n";
    print "The directory \'$spooldir\' is not the spool directory for webCalendar.\n";
    print "Please check your path and try again.\n\n";
    exit(0);
}
if ($overlap ne ''  and $overlap !~ /0|1|2/) {
    print "\n";
    print "The overlap value \'$overlap\' is not valid.\n";
    print "Valid overlap values are 0, 1 or 2 (Y/N/Never)";
    exit(0);
}
if( open(F, "<$pswdf")) {
    my $err=0;
    while(<F>) {
        $err=1 if /^$username:/;
    }
    close F;
    if($err) {
        print "\nThe name \'$username\' has already been taken.";
        print "\nPlease choose another calendar name.\n\n";
        exit(2);
    }
} else {
    print "\nCannot open \'$pswdf\' for reading.\n\n";
    exit(0);
}

$caldir="$spooldir/$username";
if( -d "$caldir" or -f "caldir") {
    print "\nThe name \'$username\' has already been taken.";
    print "\nPlease choose another calendar name.\n\n";
    exit(2);
}

#=======================
if(! $pline) {
    my $encyptedpaswd = '';
    srand(time()^($$ +($$<<15)));
    my $tmp=int(rand(1000));
    $encyptedpaswd= crypt($password,"$tmp");
    $pline="$username:$encyptedpaswd\n";
}
#=======================

if( sysopen(F, "$pswdf", O_WRONLY | O_CREAT) ) {
    flock(F, LOCK_EX);
    my $content=`cat $pswdf`;
    truncate(F, 0);
    print F $content;
    print F "$pline";
    flock(F, LOCK_UN);    
    close F;
} else {   die( "Cannot write to \'$pswdf\'."); }

my $calendar = "$spooldir/$username";
if(mkdir($calendar, 711)) {
    open(F, ">$calendar/data");
    if($common_cal and open(IN, "<$spooldir/$common_cal/data")) {
	while(<IN>) { print F $_;} close IN;
	my $csfile;
	for $csfile ('css.css', 'css') {
	    if(open(CSSIN,  "<$spooldir/$common_cal/$csfile") and
	       open(CSSOUT,  ">$spooldir/$username/$csfile") ) {
		while(<CSSIN>) {print CSSOUT $_;} close CSSIN; close CSSOUT;
	    }
	}
    } else { print F "\@::caldata=();\n1;\n";}
    close F;
    open(G, ">$calendar/info");
    print G "\$::calinfo{'w'}='", $username, "';\n";
    $name =~ s/\'/\\\'/g;
    print G "\$::calinfo{'name'}='", $name, "';\n" ;   
    $email =~ s/\'/\\\'/g;
    print G "\$::calinfo{'email'}='", $email, "';\n" ;   
    print G "\$::calinfo{'ctype'}='", $type, "';\n" ;   
    if($homepage) {
	$homepage =~ s/\'/\\\'/g;
	print G "\$::calinfo{'homepage'}='", $homepage, "';\n" ;   	
    }
    if ($overlap ne "") {
       print G "\$::calinfo{'ol'}='", $overlap, "';\n" ;
    }
    if($title ne "") {
	$title =~ s/\'/\\\'/g;
	print G "\$::calinfo{'dname'}='", $title, "';\n" ;
    }
    system("chown -R $httpdowner $calendar");
    system("chgrp -R $httpdgroup $calendar");
    print "\n";
    print "Calendar \'$username\' has been created.\n\n";
    exit(0);
}
#=======================================================================
sub validname {		# check if a valid calendar name
  my ($name) = (@_);
  return 0 if $name eq "";
  return 0 if $name =~ /^\./;
  return 0 if $name !~ /^[\w|\.|-|=]+$/;
  return 1;
}
#=======================================================================
