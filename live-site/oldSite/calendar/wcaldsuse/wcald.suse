#!/bin/bash
#
# Author: Richard Johnson <richard@lostpilgrim.co.uk>
# Date:   15/10/2002
#
# /etc/init.d/wcald
#
#  System startup script for the WebCal wcald daemon process.
#
#  This script was written for SuSE Linux 8, but should work 
#  other LSB compliant SuSE distributions. It probably won't
#  work with Redhat based distributions. YMMV.
#
#  The only thing you may need to amend is the location of 
#  wcald. This is stored in the variable $WCALD_BIN defined
#  at the very start of the script below. Set this variable
#  to the true location of wcald on your system and you 
#  should be away. Note: It is very important that $WCALD_BIN
#  holds the full unqualified path to wcald or this script
#  won't work.
#
#  If you discover any bugs or come up with any enhancements
#  for this script please email me at the above address.
#
#  Richard.
#
#  
#
# The INIT information below is used by Yast2
#
### BEGIN INIT INFO
# Provides:       wcald
# Required-Start: $network sendmail
# Required-Stop:
# Default-Start:  3 5
# Default-Stop:   0 1 2 6
# Description:    initscript for the Web Calendar daemon
### END INIT INFO
#
#


# This variable holds the full path to wcald
WCALD_BIN=/usr/local/httpd/cgi-bin/wcal/wcald


# Include SuSE config settings such as PATH, etc.
test -r /etc/rc.config && . /etc/rc.config

# Make sure that wcald exists. According to the LSB
# a return value of 5 indicates that the program is
# not installed, hence:
test -x $WCALD_BIN || exit 5

# include rc.status to get assorted shell functions
# including those that print 'done', 'failed', etc
# in those lovely pretty colours.
. /etc/rc.status

# first thing we must do is reset the local rc status.
rc_reset


case "$1" in
	start)
		echo -n "Starting wcald"

		# startproc returns 0 if the process
		# can be successfully started or it 
		# is already running.
		startproc $WCALD_BIN
	
		rc_status -v
		;;
	stop)
		echo -n "Shutting down wcald"

		killproc $WCALD_BIN

		rc_status -v
		;;
	restart)
		# stop wcald if it is running and then start it
		$0 stop
		$0 start

		# the lack of a -v flag is deliberate here.
		rc_status
		;;
	status)
		echo -n "Checking for service wcald: "

		checkproc $WCALD_BIN
		rc_status -v
		;;
	*)
		# print usage information
		echo "Usage: $0 {start|stop|restart|status}"
		exit 1
		;;
esac

# and that's all folks!
rc_exit

